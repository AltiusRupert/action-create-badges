name: Populate Github repository from Salesforce org

# Salesforce login parameters.
# Login with :
# - either salesforce_url, salesforce_username, salesforce_password and salesforce_security_token
# - or salesforce_url, salesforce_username, salesforce_password without salesforce_security_token
# - or salesforce_sfdx_auth_url (get this with : sfdx force:org:display -u bprofilers-prod --verbose)
# - (tbc : or with salesforce_accesstoken)

inputs:
  salesforce_url:
    description: Salesforce org url (best with mydomain.my.salesforce.com, mydomain-dev-ed.my.salesforce ou mydomain--mysandbvox.my.salesforce.com
    required: false
  salesforce_username:
    description: Salesforce org admin username
    required: false
  salesforce_password:
    description: Salesforce org admin password
    required: false
  salesforce_security_token:
    description: Salesforce security toker
    required: false
  salesforce_sfdx_auth_url:
    description: Salesforce SFDX auth URL
    required: false
  folder_to_commit:
    description: Which folder should we commit to Git, default being .
    default: .
    required: false
  do_git_add:
    description: Do you want to git add ?
    default: false
    required: false
  do_git_commit:
    description: Do you want to git commit ?
    default: false
    required: false
  package_xml:
    description: package.xml manifest file to use for checkout. Optional; if absent, the action retrieves metadata with '--fromorg' option.
    default: manifest/package-snapshot.xml
    required: false
  timeout:
    description: timeout duration (nb minutes, default 60) passed to the sfdx force:source:retrieve command
    default: 60
    required: false

runs:
  using: "composite"
  steps:
    # Retrieve source from Salesforce organization with input package.xml
    - uses: RupertBarrow/actions/action-command@v3
      if: ${{ ! inputs.package_xml }}
      with:
        salesforce_sfdx_auth_url: "${{ inputs.salesforce_sfdx_auth_url }}"
        command: sfdx force:source:manifest:create --fromorg=checkout -o manifest -n package-snapshot-fromorg.xml
    - uses: RupertBarrow/actions/action-command@v3
      if: ${{ ! inputs.package_xml }}
      with:
        salesforce_sfdx_auth_url: "${{ inputs.salesforce_sfdx_auth_url }}"
        command: sfdx force:source:retrieve -x manifest/package-snapshot-fromorg.xml -w ${{ inputs.timeout }}

    # Retrieve source from Salesforce organization with input package.xml
    - uses: RupertBarrow/actions/action-command@v3
      if: ${{ inputs.package_xml }}
      with:
        salesforce_sfdx_auth_url: "${{ inputs.salesforce_sfdx_auth_url }}"
        command: sfdx force:source:retrieve -x ${{ inputs.package_xml }}  -w ${{ inputs.timeout }}

    - name: Prettify code
      uses: creyD/prettier_action@v4.3
      with:
        prettier_options: --write 'force-app/**/*.{cls,cmp,component,css,html,js,json,md,page,trigger,xml,yaml,yml}'
        prettier_plugins: "prettier-plugin-sf-xml"

    - name: Configure git settings
      shell: bash
      run: |
        git config --global --add safe.directory `pwd`
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"

    - name: git add ?
      shell: bash
      run: ( ${{ inputs.do_git_add }} && git add ${{ inputs.folder_to_commit }} )  || true

    - name: git commit ?
      shell: bash
      run: ( ${{ inputs.do_git_commit }} && git commit -m "Updated from Salesforce" )  || true
