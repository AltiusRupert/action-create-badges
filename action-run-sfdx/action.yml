name: Populate Github repository from Salesforce org

# Salesforce login parameters.
# Login with :
# - either salesforce_url, salesforce_username, salesforce_password and salesforce_security_token
# - or salesforce_url, salesforce_username, salesforce_password without salesforce_security_token
# - or salesforce_sfdx_auth_url (get this with : sfdx force:org:display -u bprofilers-prod --verbose)
# - (tbc : or with salesforce_accesstoken)

inputs:
  # Authentication
  salesforce_url:
    description: Salesforce org url (best with mydomain.my.salesforce.com, mydomain-dev-ed.my.salesforce ou mydomain--mysandbvox.my.salesforce.com
    required: false
  salesforce_username:
    description: Salesforce org admin username
    required: false
  salesforce_password:
    description: Salesforce org admin password
    required: false
  salesforce_security_token:
    description: Salesforce security toker
    required: false
  salesforce_sfdx_auth_url:
    description: Salesforce SFDX auth URL
    required: false

  # NB : checkout on the branch must be done by the caller
  branch:
    description: Github branch (or ref) to commit to
    required: false
    default: "main"

  # SFDX command
  sfdx_command:
    description: options for the "sfdx force:source:retrieve" command
    required: true

  # Commit to Github
  folder_to_commit:
    description: Which folder should we commit to Git, default being .
    default: .
    required: false
  do_commit:
    description: Do you want to add, commit to git and push to Github ?
    default: false
    required: false
  github_token:
    required: true

runs:
  using: "composite"
  #permissions:
  #  contents: write
  steps:
    # NB : checkout on the branch must be done by the caller
    # NB : caller must set "permissions: contents: write" if do_git_commit is set to true

    #################################################################################################################################
    # AUTHENTICATION
    #

    - name: Store SFDX auth URL
      shell: bash
      run: |
        echo ${{ inputs.salesforce_sfdx_auth_url }} > ./sfdxauthurl.txt

    - name: Authenticate
      shell: bash
      run: |
        if [ -z "${{ inputs.salesforce_sfdx_auth_url }}" ]
        then
          echo 'y' | sfdx plugins:install sfpowerkit
          if [ -z "${{ inputs.salesforce_security_token }}" ]
          then
            echo sfdx sfpowerkit:auth:login -r ${{ inputs.salesforce_url }} -u ${{ inputs.salesforce_username }} -p ${{ inputs.salesforce_password }} -a checkout
            sfdx      sfpowerkit:auth:login -r ${{ inputs.salesforce_url }} -u ${{ inputs.salesforce_username }} -p ${{ inputs.salesforce_password }} -a checkout
          else
            echo sfdx sfpowerkit:auth:login -r ${{ inputs.salesforce_url }} -u ${{ inputs.salesforce_username }} -p ${{ inputs.salesforce_password }} -s ${{ inputs.salesforce_security_token }} -a checkout
            sfdx      sfpowerkit:auth:login -r ${{ inputs.salesforce_url }} -u ${{ inputs.salesforce_username }} -p ${{ inputs.salesforce_password }} -s ${{ inputs.salesforce_security_token }} -a checkout
          fi
        else
          echo sfdx force:auth:sfdxurl:store -f ./sfdxauthurl.txt -s -a checkout
          sfdx force:auth:sfdxurl:store -f ./sfdxauthurl.txt -s -a checkout
        fi
        sfdx force:config:set defaultusername=checkout
        rm -f ./sfdxauthurl.txt

    #################################################################################################################################
    # Run SFDX command
    #

    - name: Retrieve from Salesforce org
      shell: bash
      run: |
        ${{ inputs.sfdx_command }}

    #################################################################################################################################
    # COMMIT to Github
    #

    - name: Configure git settings
      if: ${{ inputs.do_commit }}
      shell: bash
      run: |
        git config --global --add safe.directory `pwd`
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"

    - name: git add ?
      if: ${{ inputs.do_commit }}
      shell: bash
      run: git add ${{ inputs.folder_to_commit }}

    - name: git commit ?
      if: ${{ inputs.do_commit }}
      shell: bash
      run: git commit -m "Updated from Salesforce"

    - name: Push to Github
      if: ${{ inputs.do_commit }}
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ inputs.github_token }}
        directory: ${{ env.folder-to-commit }}
        branch: ${{ github.ref }}
        force: true
