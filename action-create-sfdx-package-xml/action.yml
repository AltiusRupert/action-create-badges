name: Populate Github repository from Salesforce org

# Salesforce login parameters.
# Login with :
# - either salesforce_url, salesforce_username, salesforce_password and salesforce_security_token
# - or salesforce_url, salesforce_username, salesforce_password without salesforce_security_token
# - or salesforce_sfdx_auth_url (get this with : sfdx force:org:display -u bprofilers-prod --verbose)
# - (tbc : or with salesforce_accesstoken)

inputs:
  # NB : checkout on the branch must be done by the caller
  contents:
    description: Contents of the package.xml
    required: true
  path:
    description: Path to the file, eg manifest/package.xml
    required: true

  # Commit to Github
  folder_to_commit:
    description: Which folder should we commit to Git, default being .
    default: .
    required: false
  commit_message:
    description: Commit message
    default: "Added by Rapido automation"
    required: false
  github_token:
    required: true

runs:
  using: "composite"
  steps:
    # NB : checkout on the branch must be done by the caller
    # NB : caller must set "permissions: contents: write" to allow this action to commit to Github

    #################################################################################################################################
    # GENERATE package.xml
    #

    - name: Generate package.xml content
      id: generate-xml
      uses: actions/github-script@v6
      with:
        result-encoding: string
        script: |
          const API_VERSION = 56.0

          const XML_START = `<?xml version="1.0" encoding="UTF-8"?>
          <Package xmlns="http://soap.sforce.com/2006/04/metadata">`

          const XML_END = `
            <version>${API_VERSION}</version>
          </Package>`

          const data = ${{ github.event.inputs.contents }}
          console.log("data=", data)
          console.log("entries=", Object.entries(data))

          /*
          let result = ''
          for(const [key, rows] of Object.entries(data)) {
          console.log('rows=', rows)
            result += rows.map(row=>`
            <types>
              <members>${row.name}</members>
              <name>${key}</name>
            </types>`).join('')
          }

          return XML_START + result + XML_END
          */

    - name: Update package.xml file
      shell: bash
      run: |
        echo '${{steps.generate-xml.outputs.result}}'
        echo '${{steps.generate-xml.outputs.result}}' > ${{ github.event.inputs.path }}

    #################################################################################################################################
    # COMMIT and push to Github
    #

    - name: Configure git settings
      shell: bash
      run: |
        git config --global --add safe.directory `pwd`
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"

    - name: git add ?
      shell: bash
      run: git add ${{ inputs.folder_to_commit }}

    - name: git commit ?
      shell: bash
      run: git commit -m "${{ inputs.commit_message }}"

    - name: Push to Github
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ inputs.github_token }}
        directory: ${{ env.folder-to-commit }}
        branch: ${{ github.ref }}
        force: true
